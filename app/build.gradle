plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "br.eti.rafaelcouto.marvelheroes"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "PUBLIC_KEY", "\"a861ecf9f1cb39a9a5e2707f5966ffb0\""
        buildConfigField "String", "PRIVATE_KEY", "\"576d3b6c78c18baac2e2c4f6891dde915f5ab7ab\""
        buildConfigField "String", "API_ENDPOINT", "\"https://gateway.marvel.com/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }
}

// ktlint

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // ktlint
    ktlint "com.pinterest:ktlint:$versions.ktlint"

    // android
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    implementation "com.google.android.material:material:$versions.material"

    // api requests
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.loggingInterceptor"
    implementation "com.squareup.picasso:picasso:$versions.picasso"

    // rx
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxJava"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin"

    // tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
    testImplementation "androidx.test:core:$versions.androidXTestCore"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockWebServer"

    androidTestImplementation "androidx.test.ext:junit:$versions.androidXJUnit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidXEspresso"
}
